######################## relation definitions
# IDB
client_in(sender, l, t)
client_out(payload, l, t)

register(payload, l, t)
Next(payload, l, t)
######################## end relation definitions


# select a random value to save, if there are concurrent ones
Next(choose<payload>, l, t) :- client_in(payload, l, t), Â¬register(_, l, t)
Next(payload, l, t) :- register(payload, l, t)
register(payload, l, t') :- Next(payload, l, t), succ(t, t')
# return the new/current payload
client_out(payload, sender, t') :- client_in(sender, l, t), Next(payload, l, t), choose(_, t')

# Can't partition because: client_in cross joins with all register values (line 12), but register values are derived from client payloads (line 12, 14). No co-partition dependency