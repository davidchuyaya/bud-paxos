# Receive signature + input
# Store in local hashset
# Sign input (expensive)
# Send signed message back to leader


######################## relation definitions
# EDBs
leader(l')
sign(msg, sig) # sign(msg, l) = sig
hash(value, h) # hash(value) = h
verify(msg, sig)

# communication with replicas
toStorage(v, lSig, l, t) # lSig = leader sig
fromStorage(r, sig, v, coll, l, t) # r = replica ID

# internal state
hashset(hash, value, l, t)
numCollisions(coll, hash, l, t)

######################## rules
# Sugared syntax: exclude all location and time. Use @async(l) for sends
persist[hashset]
hashset(h,v) :- toStorage(v,lSig), hash(v,h), verify(v,lSig)
numCollisions(count<v>,h) :- toStorage(v,lSig), hash(v,h), hashset(h,v)
fromStorage(l,sig,v,coll)@async(l') :- toStorage(v,_), hash(v,h), numCollisions(coll,h), sign(v,sig), leader(l')